-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.audit_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  table_name text NOT NULL,
  record_id uuid NOT NULL,
  action text NOT NULL CHECK (action = ANY (ARRAY['INSERT'::text, 'UPDATE'::text, 'DELETE'::text])),
  old_values jsonb,
  new_values jsonb,
  utilisateur_id uuid,
  organisation_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  ip_address inet,
  user_agent text,
  CONSTRAINT audit_log_pkey PRIMARY KEY (id),
  CONSTRAINT audit_log_utilisateur_id_fkey FOREIGN KEY (utilisateur_id) REFERENCES public.utilisateurs(id),
  CONSTRAINT audit_log_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id)
);
CREATE TABLE public.autres_equipements (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  etat_des_lieux_id uuid,
  equipement text NOT NULL,
  etat_entree text,
  etat_sortie text,
  commentaires text,
  photos jsonb DEFAULT '[]'::jsonb,
  user_id uuid,
  CONSTRAINT autres_equipements_pkey PRIMARY KEY (id),
  CONSTRAINT autres_equipements_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT autres_equipements_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id)
);
CREATE TABLE public.cles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  etat_des_lieux_id uuid,
  type_cle_badge text,
  nombre integer,
  numero_cle text,
  commentaires text,
  photos jsonb DEFAULT '[]'::jsonb,
  user_id uuid,
  CONSTRAINT cles_pkey PRIMARY KEY (id),
  CONSTRAINT cles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT cles_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id)
);
CREATE TABLE public.equipements_chauffage (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  etat_des_lieux_id uuid,
  chaudiere_etat text,
  chaudiere_date_dernier_entretien date,
  ballon_eau_chaude_etat text,
  radiateurs_nombre integer,
  radiateurs_etat text,
  thermostat_present boolean,
  thermostat_etat text,
  pompe_a_chaleur_present boolean,
  pompe_a_chaleur_etat text,
  commentaires text,
  photos jsonb DEFAULT '[]'::jsonb,
  user_id uuid,
  CONSTRAINT equipements_chauffage_pkey PRIMARY KEY (id),
  CONSTRAINT equipements_chauffage_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id),
  CONSTRAINT equipements_chauffage_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.equipements_energetiques (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  etat_des_lieux_id uuid,
  chauffage_type text,
  eau_chaude_type text,
  dpe_classe text,
  ges_classe text,
  date_dpe date,
  presence_panneaux_solaires boolean,
  type_isolation text,
  commentaires text,
  photos jsonb DEFAULT '[]'::jsonb,
  user_id uuid,
  CONSTRAINT equipements_energetiques_pkey PRIMARY KEY (id),
  CONSTRAINT equipements_energetiques_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id),
  CONSTRAINT equipements_energetiques_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.etat_des_lieux (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  date_entree date,
  date_sortie date,
  adresse_bien text NOT NULL,
  statut text,
  type_etat_des_lieux text NOT NULL CHECK (type_etat_des_lieux = ANY (ARRAY['entree'::text, 'sortie'::text])),
  type_bien text NOT NULL CHECK (type_bien = ANY (ARRAY['studio'::text, 't2_t3'::text, 't4_t5'::text, 'inventaire_mobilier'::text, 'bureau'::text, 'local_commercial'::text, 'garage_box'::text, 'pieces_supplementaires'::text])),
  bailleur_nom text,
  bailleur_adresse text,
  locataire_nom text,
  locataire_adresse text,
  rendez_vous_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  photos jsonb DEFAULT '[]'::jsonb,
  travaux_a_faire boolean DEFAULT false,
  description_travaux text,
  created_by uuid,
  updated_by uuid,
  organisation_id uuid,
  visibilite text DEFAULT 'prive'::text CHECK (visibilite = ANY (ARRAY['prive'::text, 'organisation'::text, 'public'::text])),
  user_id uuid,
  organization_id uuid,
  signature_locataire text,
  signature_proprietaire_agent text,
  CONSTRAINT etat_des_lieux_pkey PRIMARY KEY (id),
  CONSTRAINT fk_etat_des_lieux_rendez_vous FOREIGN KEY (rendez_vous_id) REFERENCES public.rendez_vous(id),
  CONSTRAINT etat_des_lieux_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id),
  CONSTRAINT etat_des_lieux_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.utilisateurs(id),
  CONSTRAINT etat_des_lieux_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.utilisateurs(id),
  CONSTRAINT etat_des_lieux_rendez_vous_id_fkey FOREIGN KEY (rendez_vous_id) REFERENCES public.rendez_vous(id)
);
CREATE TABLE public.invitations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organisation_id uuid NOT NULL,
  email text NOT NULL,
  role text NOT NULL DEFAULT 'utilisateur'::text CHECK (role = ANY (ARRAY['admin_organisation'::text, 'utilisateur'::text])),
  invite_par uuid NOT NULL,
  token text NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL,
  accepted_at timestamp with time zone,
  accepted_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  statut text DEFAULT 'en_attente'::text CHECK (statut = ANY (ARRAY['en_attente'::text, 'accepte'::text, 'expire'::text, 'revoque'::text])),
  CONSTRAINT invitations_pkey PRIMARY KEY (id),
  CONSTRAINT invitations_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id),
  CONSTRAINT invitations_invite_par_fkey FOREIGN KEY (invite_par) REFERENCES public.utilisateurs(id),
  CONSTRAINT invitations_accepted_by_fkey FOREIGN KEY (accepted_by) REFERENCES public.utilisateurs(id)
);
CREATE TABLE public.organisations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  nom text NOT NULL,
  adresse text,
  telephone text,
  email text,
  siret text,
  logo_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  active boolean DEFAULT true,
  CONSTRAINT organisations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.parties_privatives (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  etat_des_lieux_id uuid,
  type_partie text NOT NULL,
  etat_entree text,
  etat_sortie text,
  numero text,
  commentaires text,
  photos jsonb DEFAULT '[]'::jsonb,
  user_id uuid,
  CONSTRAINT parties_privatives_pkey PRIMARY KEY (id),
  CONSTRAINT parties_privatives_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT parties_privatives_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id)
);
CREATE TABLE public.permissions_partage (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  etat_des_lieux_id uuid NOT NULL,
  utilisateur_id uuid NOT NULL,
  permission text NOT NULL CHECK (permission = ANY (ARRAY['lecture'::text, 'ecriture'::text, 'admin'::text])),
  accorde_par uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  CONSTRAINT permissions_partage_pkey PRIMARY KEY (id),
  CONSTRAINT permissions_partage_utilisateur_id_fkey FOREIGN KEY (utilisateur_id) REFERENCES public.utilisateurs(id),
  CONSTRAINT permissions_partage_accorde_par_fkey FOREIGN KEY (accorde_par) REFERENCES public.utilisateurs(id),
  CONSTRAINT permissions_partage_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id)
);
CREATE TABLE public.pieces (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  etat_des_lieux_id uuid,
  nom_piece text NOT NULL,
  revetements_sols text,
  murs_menuiseries text,
  plafond text,
  electricite_plomberie text,
  placards text,
  sanitaires text,
  menuiseries text,
  rangements text,
  baignoire_douche text,
  eviers_robinetterie text,
  chauffage_tuyauterie text,
  meubles_cuisine text,
  hotte text,
  plaque_cuisson text,
  commentaires text,
  photos jsonb DEFAULT '[]'::jsonb,
  user_id uuid,
  CONSTRAINT pieces_pkey PRIMARY KEY (id),
  CONSTRAINT pieces_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id),
  CONSTRAINT pieces_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.releve_compteurs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  etat_des_lieux_id uuid,
  nom_ancien_occupant text,
  electricite_n_compteur text,
  electricite_h_pleines text,
  electricite_h_creuses text,
  gaz_naturel_n_compteur text,
  gaz_naturel_releve text,
  eau_chaude_m3 text,
  eau_froide_m3 text,
  photos jsonb DEFAULT '[]'::jsonb,
  user_id uuid,
  CONSTRAINT releve_compteurs_pkey PRIMARY KEY (id),
  CONSTRAINT releve_compteurs_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id),
  CONSTRAINT releve_compteurs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.rendez_vous (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  date date NOT NULL,
  heure time without time zone NOT NULL,
  duree text,
  description text,
  adresse text NOT NULL,
  code_postal text NOT NULL,
  ville text NOT NULL,
  latitude double precision,
  longitude double precision,
  nom_contact text NOT NULL,
  telephone_contact text NOT NULL,
  email_contact text NOT NULL,
  note_personnelle text,
  type_etat_des_lieux text,
  type_bien text,
  created_at timestamp with time zone DEFAULT now(),
  statut text DEFAULT 'planifie'::text CHECK (statut = ANY (ARRAY['planifie'::text, 'realise'::text, 'annule'::text, 'reporte'::text])),
  etat_des_lieux_id uuid,
  photos jsonb DEFAULT '[]'::jsonb,
  created_by uuid,
  updated_by uuid,
  organisation_id uuid,
  updated_at timestamp with time zone DEFAULT now(),
  user_id uuid,
  organization_id uuid,
  CONSTRAINT rendez_vous_pkey PRIMARY KEY (id),
  CONSTRAINT rendez_vous_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.utilisateurs(id),
  CONSTRAINT rendez_vous_etat_des_lieux_id_fkey FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id),
  CONSTRAINT rendez_vous_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.utilisateurs(id),
  CONSTRAINT rendez_vous_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id),
  CONSTRAINT fk_rendez_vous_etat_des_lieux FOREIGN KEY (etat_des_lieux_id) REFERENCES public.etat_des_lieux(id)
);
CREATE TABLE public.utilisateurs (
  id uuid NOT NULL,
  email text NOT NULL,
  prenom text NOT NULL,
  nom text NOT NULL,
  telephone text,
  organisation_id uuid,
  role text NOT NULL DEFAULT 'utilisateur'::text CHECK (role = ANY (ARRAY['super_admin'::text, 'admin_organisation'::text, 'utilisateur'::text])),
  statut text NOT NULL DEFAULT 'actif'::text CHECK (statut = ANY (ARRAY['actif'::text, 'inactif'::text, 'en_attente'::text])),
  avatar_url text,
  preferences jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_login timestamp with time zone,
  created_by uuid,
  activated_by uuid,
  activated_at timestamp with time zone,
  CONSTRAINT utilisateurs_pkey PRIMARY KEY (id),
  CONSTRAINT utilisateurs_activated_by_fkey FOREIGN KEY (activated_by) REFERENCES public.utilisateurs(id),
  CONSTRAINT utilisateurs_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT utilisateurs_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id),
  CONSTRAINT utilisateurs_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.utilisateurs(id)
);
