-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.assurancevie (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  type_assurance text CHECK (type_assurance = ANY (ARRAY['Contrat monosupport'::text, 'Contrat multisupport'::text])),
  libelle text,
  numero text,
  compagnie text,
  date_acquisition date,
  souscripteur text CHECK (souscripteur = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  contrat_gere boolean,
  somme_versee numeric,
  fond_euros numeric,
  unite_de_compte numeric,
  value numeric,
  epargne_annuelle numeric,
  proprietaire text CHECK (proprietaire = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  conjoint_part numeric,
  conjoint_type text CHECK (conjoint_type = ANY (ARRAY['PP'::text, 'US'::text, 'NP -1'::text, 'NP -2'::text])),
  enfants_part numeric,
  enfants_type text CHECK (enfants_type = ANY (ARRAY['PP'::text, 'US'::text, 'NP -1'::text, 'NP -2'::text])),
  autres_part numeric,
  autres_type text CHECK (autres_type = ANY (ARRAY['PP'::text, 'US'::text, 'NP -1'::text, 'NP -2'::text])),
  denouement text CHECK (denouement = ANY (ARRAY['Décès 1'::text, 'Décés 2'::text])),
  rachat_part numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT assurancevie_pkey PRIMARY KEY (id),
  CONSTRAINT assurancevie_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.autrepatrimoine (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  libelle text,
  famille_autre text,
  date_acquisition date,
  value numeric,
  proprietaire text CHECK (proprietaire = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  type_propriete text CHECK (type_propriete = ANY (ARRAY['PP'::text, 'US'::text, 'NP -1'::text, 'NP -2'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT autrepatrimoine_pkey PRIMARY KEY (id),
  CONSTRAINT autrepatrimoine_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.bienimmobilier (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  type_immobilier text CHECK (type_immobilier = ANY (ARRAY['Bien de jouissance'::text, 'Bien de rapport'::text])),
  famille_immobilier text CHECK (famille_immobilier = ANY (ARRAY['Résidence principale'::text, 'Résidence secondaire'::text, 'Autre'::text])),
  libelle text,
  date_acquisition date,
  date_echeance date,
  value numeric,
  proprietaire text CHECK (proprietaire = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  type_propriete text CHECK (type_propriete = ANY (ARRAY['PP'::text, 'US'::text, 'NP -1'::text, 'NP -2'::text])),
  loyer_brut numeric,
  loyer_imposable numeric,
  taxes numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT bienimmobilier_pkey PRIMARY KEY (id),
  CONSTRAINT bienimmobilier_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.budget (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  asset_type text CHECK (asset_type = ANY (ARRAY['immobilier'::text, 'banque'::text, 'entreprise'::text, 'assurance_vie'::text, 'autres'::text])),
  asset_id uuid,
  libelle character varying NOT NULL,
  montant numeric NOT NULL,
  frequency character varying NOT NULL DEFAULT 'non_recurrente'::character varying CHECK (frequency::text = ANY (ARRAY['non_recurrente'::character varying, 'monthly'::character varying, 'annual'::character varying]::text[])),
  date_creation timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT budget_pkey PRIMARY KEY (id),
  CONSTRAINT budget_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.comptebancaire (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  type_compte text CHECK (type_compte = ANY (ARRAY['Autre'::text, 'CEL'::text, 'Compte à terme'::text, 'Compte courant'::text, 'LDDS'::text, 'LEP'::text, 'Livret A'::text, 'PEL'::text, 'PEP'::text, 'Somme à investir'::text])),
  famille_liquidites text CHECK (famille_liquidites = ANY (ARRAY['Action'::text, 'Autre'::text, 'Compte titre'::text, 'FCP'::text, 'FCPI'::text, 'FIP'::text, 'Obligations'::text, 'OPCI'::text, 'Parts sociales'::text, 'PEA'::text, 'PEA-PME'::text, 'PEE'::text, 'PEP'::text, 'SICAV'::text, 'SOFICA'::text])),
  etablissement text,
  libelle text,
  contrat_gere boolean,
  date_acquisition date,
  date_cloture date,
  value numeric,
  epargne_annuelle numeric,
  proprietaire text CHECK (proprietaire = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  type_propriete text CHECK (type_propriete = ANY (ARRAY['PP'::text, 'US'::text, 'NP -1'::text, 'NP -2'::text])),
  taux numeric,
  optimisation text CHECK (optimisation = ANY (ARRAY['PFU 12,8%'::text, 'PFL, 22,5% pea'::text, 'PFL 19% pea'::text, 'Exonération'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT comptebancaire_pkey PRIMARY KEY (id),
  CONSTRAINT comptebancaire_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.contacts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  email text NOT NULL,
  message text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  is_processed boolean DEFAULT false,
  CONSTRAINT contacts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.contratcapitalisation (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  libelle text,
  numero text,
  regime text CHECK (regime = ANY (ARRAY['Art. 83 / PER'::text, 'Madelin'::text, 'PER'::text, 'PERCO'::text, 'PEREC'::text, 'PERO'::text, 'PERP'::text, 'PREFON PER'::text, 'Autre'::text])),
  compagnie text,
  date_acquisition date,
  souscripteur text CHECK (souscripteur = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  contrat_gere boolean,
  fond_euros numeric,
  unite_de_compte numeric,
  value numeric,
  phase text CHECK (phase = ANY (ARRAY['Epargne'::text, 'Retraite'::text])),
  personnelle numeric,
  professionnelle numeric,
  rente_annuelle numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT contratcapitalisation_pkey PRIMARY KEY (id),
  CONSTRAINT contratcapitalisation_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.credit (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  type text,
  libelle text,
  date_acquisition date,
  montant_initial numeric,
  taux numeric,
  duree_mois integer,
  mensualite numeric,
  assurance numeric,
  capital_restant_du numeric,
  emprunteur text CHECK (emprunteur = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  assurance_1 numeric,
  assurance_2 numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_pkey PRIMARY KEY (id),
  CONSTRAINT credit_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.entreprise (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  actionnaire boolean,
  formes_juridiques ARRAY,
  cession_transmission text,
  CONSTRAINT entreprise_pkey PRIMARY KEY (id),
  CONSTRAINT entreprise_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.entrepriseparticipation (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  type_entreprise text CHECK (type_entreprise = ANY (ARRAY['Outils de travail'::text, 'Entreprise Participation'::text])),
  famille_entreprise text CHECK (famille_entreprise = ANY (ARRAY['autre'::text, 'Clientèle BNC'::text, 'Entreprise BA'::text, 'Fonds de com.BIC'::text, 'SCI à l''IS'::text, 'Sociétés à l''IR'::text, 'Société à l''IS'::text, 'Société à l''IS en PEA'::text])),
  libelle text,
  date_acquisition date,
  date_echeance date,
  value numeric,
  proprietaire text CHECK (proprietaire = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  type_propriete text CHECK (type_propriete = ANY (ARRAY['PP'::text, 'US'::text, 'NP -1'::text, 'NP -2'::text])),
  dividendes numeric,
  optimisation text CHECK (optimisation = ANY (ARRAY['PFU 12,8%'::text, 'PFL, 22,5% pea'::text, 'PFL 19% pea'::text, 'Exonération'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT entrepriseparticipation_pkey PRIMARY KEY (id),
  CONSTRAINT entrepriseparticipation_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.family (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  relation text,
  related_user_id uuid,
  linked boolean NOT NULL DEFAULT false,
  CONSTRAINT family_pkey PRIMARY KEY (id),
  CONSTRAINT family_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT family_related_user_id_fkey FOREIGN KEY (related_user_id) REFERENCES public.users(id)
);
CREATE TABLE public.family_invitations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  family_id uuid NOT NULL,
  sender_id uuid NOT NULL,
  recipient_id uuid NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['pending'::text, 'accepted'::text, 'declined'::text])),
  expires_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT family_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT family_invitations_family_id_fkey FOREIGN KEY (family_id) REFERENCES public.family(id),
  CONSTRAINT family_invitations_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT family_invitations_recipient_id_fkey FOREIGN KEY (recipient_id) REFERENCES public.users(id)
);
CREATE TABLE public.fiscalite (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  connaissance_fiscale text,
  utilisation_dispositifs boolean,
  dispositifs_utilises ARRAY,
  reduction_fiscale text,
  CONSTRAINT fiscalite_pkey PRIMARY KEY (id),
  CONSTRAINT fiscalite_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.health (
  id integer NOT NULL DEFAULT nextval('health_id_seq'::regclass),
  last_check timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT health_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ifi (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  deduction numeric,
  deduction_residence_principale numeric,
  us numeric,
  reduction numeric,
  ifi numeric,
  annee integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ifi_pkey PRIMARY KEY (id),
  CONSTRAINT ifi_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.impotrevenu (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  deduction_revenu numeric,
  reduction_impot numeric,
  majoration_revenu_fiscal numeric,
  revenu_fiscal_reference numeric,
  deduction_reintegrer numeric,
  reduction_a_reintegrer numeric,
  pv_immu_brut numeric,
  pv_immo_base_pfu numeric,
  pv_immo_base_ir numeric,
  option_fiscale text CHECK (option_fiscale = ANY (ARRAY['PFU'::text, 'Barème IR'::text])),
  annee integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT impotrevenu_pkey PRIMARY KEY (id),
  CONSTRAINT impotrevenu_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.mission (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  document jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT mission_pkey PRIMARY KEY (id),
  CONSTRAINT mission_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.patrimoinefinancier (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  placements ARRAY,
  repartition_activ_risque numeric,
  objectifs_investissement ARRAY,
  horizon_investissement integer,
  CONSTRAINT patrimoinefinancier_pkey PRIMARY KEY (id),
  CONSTRAINT patrimoinefinancier_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.patrimoineimmo (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  biens_immobiliers boolean,
  valeur_biens numeric,
  credits_immobiliers boolean,
  mensualites_credit numeric,
  projets_immobiliers boolean,
  type_projet_immobilier ARRAY,
  biens_etranger boolean,
  CONSTRAINT patrimoineimmo_pkey PRIMARY KEY (id),
  CONSTRAINT patrimoineimmo_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.personalinfo (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  phone numeric,
  age integer,
  address text,
  postal_code numeric,
  city text,
  situation_matrimoniale text,
  contrat_mariage text,
  nb_enfants_charge integer,
  profession text,
  revenu_annuel numeric,
  capacite_epargne numeric,
  epargne_precaution numeric,
  inquietudes_patrimoine ARRAY,
  inquietudes_immobilier boolean,
  objectifs_patrimoniaux ARRAY,
  priorite_gestion text,
  projets_5_ans ARRAY,
  reflexion_transmission text,
  actions_transmission text,
  objectifs_transmission ARRAY,
  valeurs ARRAY,
  CONSTRAINT personalinfo_pkey PRIMARY KEY (id),
  CONSTRAINT personalinfo_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.pioneers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  first_name text NOT NULL,
  last_name text NOT NULL,
  email text NOT NULL UNIQUE,
  is_pioneer boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  auth_confirmed boolean DEFAULT false,
  CONSTRAINT pioneers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.prevoyance (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  contrat text,
  compagnie text,
  date_acquisition date,
  echeance date,
  souscripteur text CHECK (souscripteur = ANY (ARRAY['Personne 1'::text, 'Personne 2'::text, 'Commun'::text])),
  contrat_gere boolean,
  beneficiaire text CHECK (beneficiaire = ANY (ARRAY['Conjoint'::text, 'Enfants'::text, 'Autres'::text])),
  capital_deces numeric,
  garentie_accident numeric,
  rente_deces_mensuelle numeric,
  arret_travail numeric,
  rente_invalidite_partielle numeric,
  rente_invalidite_totale numeric,
  prime_annuelle numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT prevoyance_pkey PRIMARY KEY (id),
  CONSTRAINT prevoyance_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.profileinvestisseur (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  tolerance_risque text,
  reaction_baisse text,
  produits_complexes text,
  score smallint CHECK (score > 0),
  profil text,
  CONSTRAINT profileinvestisseur_pkey PRIMARY KEY (id),
  CONSTRAINT profileinvestisseur_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.projetsvie (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  changements_previsibles boolean,
  financement_etudes text,
  depenses_importantes ARRAY,
  liquidite_patrimoine numeric,
  CONSTRAINT projetsvie_pkey PRIMARY KEY (id),
  CONSTRAINT projetvie_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.retraite (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  epargne_retraite boolean,
  montant_epargne numeric,
  complement_retraite text,
  contrats_prevoyance ARRAY,
  CONSTRAINT retraite_pkey PRIMARY KEY (id),
  CONSTRAINT retraite_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.retraitecomplementaire (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  type_produit_retraite text CHECK (type_produit_retraite = ANY (ARRAY['Contrat monosupport'::text, 'Contrat multisupport'::text])),
  libelle text,
  numero text,
  created_at timestamp with time zone DEFAULT now(),
  value numeric,
  souscripteur text,
  CONSTRAINT retraitecomplementaire_pkey PRIMARY KEY (id),
  CONSTRAINT retraitecomplementaire_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.souscription_formulaire_cosouscripteur (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  civilite character varying,
  nom character varying NOT NULL,
  prenom character varying NOT NULL,
  nom_naissance character varying,
  adresse_postale character varying,
  code_postal character varying,
  ville character varying,
  pays character varying,
  date_naissance date,
  code_postal_naissance character varying,
  ville_naissance character varying,
  pays_naissance character varying,
  nir character varying,
  nationalite character varying,
  residence_fiscale character varying,
  adresse_residence_fiscale_complete character varying,
  telephone character varying,
  email character varying,
  document_presente character varying,
  situation_familiale character varying,
  regime_matrimonial character varying,
  regime_protection_majeur character varying,
  detail_regime_protection_majeur character varying,
  regime_protection_mineur character varying,
  detail_regime_protection_mineur character varying,
  activite character varying,
  profession character varying,
  code_csp character varying,
  date_fin_activite date,
  code_naf character varying,
  siret character varying,
  nom_entreprise character varying,
  CONSTRAINT souscription_formulaire_cosouscripteur_pkey PRIMARY KEY (id)
);
CREATE TABLE public.souscription_formulaire_financialdata (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  subscription_id uuid NOT NULL,
  revenus_annuels_foyer_range character varying,
  revenus_annuels_foyer_precise numeric,
  estimation_patrimoine_foyer_range character varying,
  estimation_patrimoine_foyer_precise numeric,
  repartition_immobilier numeric,
  repartition_portefeuille_valeurs_mobilieres numeric,
  repartition_placements_bancaires numeric,
  repartition_contrats_assurance_vie numeric,
  repartition_autre numeric,
  repartition_autre_precise character varying,
  origine_epargne_revenus boolean,
  origine_succession_donation boolean,
  origine_cession_immobilier boolean,
  origine_cession_mobilier boolean,
  origine_cession_professionnel boolean,
  origine_gains_jeux boolean,
  origine_autre_precise character varying,
  CONSTRAINT souscription_formulaire_financialdata_pkey PRIMARY KEY (id),
  CONSTRAINT souscription_formulaire_financialdata_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.souscription_formulaire_subscription(id)
);
CREATE TABLE public.souscription_formulaire_fundorigindetails (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  subscription_id uuid NOT NULL,
  type_fonds character varying NOT NULL,
  montant numeric,
  organisme_nom character varying,
  CONSTRAINT souscription_formulaire_fundorigindetails_pkey PRIMARY KEY (id),
  CONSTRAINT souscription_formulaire_fundorigindetails_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.souscription_formulaire_subscription(id)
);
CREATE TABLE public.souscription_formulaire_ppe (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  person_type character varying NOT NULL,
  person_id uuid NOT NULL,
  exerce_fonction_politique boolean,
  pays_exercice_fonction character varying,
  fonction_politique character varying,
  date_fin_fonction date,
  proche_ppe boolean,
  nom_prenom_ppe character varying,
  fonction_ppe character varying,
  lien_ppe_personne character varying,
  date_fin_fonction_ppe date,
  CONSTRAINT souscription_formulaire_ppe_pkey PRIMARY KEY (id)
);
CREATE TABLE public.souscription_formulaire_souscripteur (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  civilite character varying,
  nom character varying NOT NULL,
  prenom character varying NOT NULL,
  nom_naissance character varying,
  adresse_postale character varying,
  code_postal character varying,
  ville character varying,
  pays character varying,
  date_naissance date,
  code_postal_naissance character varying,
  ville_naissance character varying,
  pays_naissance character varying,
  nir character varying,
  nationalite character varying,
  residence_fiscale character varying,
  adresse_residence_fiscale_complete character varying,
  telephone character varying,
  email character varying,
  document_presente character varying,
  situation_familiale character varying,
  regime_matrimonial character varying,
  regime_protection_majeur character varying,
  detail_regime_protection_majeur character varying,
  regime_protection_mineur character varying,
  detail_regime_protection_mineur character varying,
  activite character varying,
  profession character varying,
  code_csp character varying,
  date_fin_activite date,
  code_naf character varying,
  siret character varying,
  nom_entreprise character varying,
  CONSTRAINT souscription_formulaire_souscripteur_pkey PRIMARY KEY (id)
);
CREATE TABLE public.souscription_formulaire_subscription (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  souscripteur_id uuid NOT NULL,
  co_souscripteur_id uuid,
  objectifs_versement text,
  horizon_investissement character varying,
  fonds_regularisation_fiscale boolean,
  CONSTRAINT souscription_formulaire_subscription_pkey PRIMARY KEY (id),
  CONSTRAINT souscription_formulaire_subscription_co_souscripteur_id_fkey FOREIGN KEY (co_souscripteur_id) REFERENCES public.souscription_formulaire_cosouscripteur(id),
  CONSTRAINT souscription_formulaire_subscription_souscripteur_id_fkey FOREIGN KEY (souscripteur_id) REFERENCES public.souscription_formulaire_souscripteur(id)
);
CREATE TABLE public.souscription_formulaire_taxresidence (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  person_type character varying NOT NULL,
  person_id uuid NOT NULL,
  citoyen_usa boolean,
  resident_fiscal_usa boolean,
  possede_tin_usa boolean,
  tin_usa_numero character varying,
  adresse_residence_fiscale_tin character varying,
  resident_fiscal_autres_pays boolean,
  pays_residence_fiscale_1 character varying,
  nif_1 character varying,
  adresse_residence_fiscale_1 character varying,
  pays_residence_fiscale_2 character varying,
  nif_2 character varying,
  adresse_residence_fiscale_2 character varying,
  pays_residence_fiscale_3 character varying,
  nif_3 character varying,
  adresse_residence_fiscale_3 character varying,
  CONSTRAINT souscription_formulaire_taxresidence_pkey PRIMARY KEY (id)
);
CREATE TABLE public.statements (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  document jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT statements_pkey PRIMARY KEY (id),
  CONSTRAINT statements_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.traindevie (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  loyer numeric,
  charges_loyer numeric,
  assurances numeric,
  transport numeric,
  alimentation numeric,
  loisirs numeric,
  etudes numeric,
  sante numeric,
  divers numeric,
  total numeric,
  CONSTRAINT traindevie_pkey PRIMARY KEY (id),
  CONSTRAINT traindevie_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  last_name text,
  first_name text,
  power integer,
  email text,
  created_at timestamp with time zone DEFAULT now(),
  civilite text CHECK (civilite = ANY (ARRAY['M.'::text, 'Mme'::text, 'Mlle'::text])),
  date_naissance date,
  part_fiscale numeric,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
